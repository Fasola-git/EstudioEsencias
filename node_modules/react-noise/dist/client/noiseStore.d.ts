import { NoiseConfig } from "../types";
type Cache<T> = {
    [index: string]: T;
};
type Store = {
    caches: Cache<HTMLCanvasElement>;
    initFinished: Cache<boolean>;
    configs: Cache<NoiseConfig>;
    init: typeof init;
    renderNoise: typeof renderNoise;
    setConfig: typeof setConfig;
};
declare const noiseStore: {
    subscribe(listener: () => void): () => void;
    getSnapshot(): Store;
    getServerSnapshot(): Store;
};
declare function setConfig(newConfig: Partial<NoiseConfig>, key?: string): void;
declare function init(key?: string): any;
declare function renderNoise(canvas: HTMLCanvasElement, key?: string): () => void;
export default noiseStore;
export { setConfig, init, renderNoise };
